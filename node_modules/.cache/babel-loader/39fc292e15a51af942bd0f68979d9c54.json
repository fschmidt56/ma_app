{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4_Semester\\\\MA\\\\WebGIS\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4_Semester\\\\MA\\\\WebGIS\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import{Map,Geolocation}from'ol';import TileLayer from'ol/layer/Tile';import VectorSource from'ol/source/Vector';import GeoJSON from'ol/format/GeoJSON';import{bbox as bboxStrategy}from'ol/loadingstrategy';import VectorLayer from'ol/layer/Vector';import Select from'ol/interaction/Select';import XYZSource from'ol/source/XYZ';import{baseLayerUrl,geoserverWfsUrl,view,locationFeature}from'./MapConfig';import{selectedStyle,defaultStyle}from'./MapStyles';export var MapUtils=/*#__PURE__*/function(){function MapUtils(){_classCallCheck(this,MapUtils);}_createClass(MapUtils,null,[{key:\"createBaseLayer\",value:function createBaseLayer(){var xyzURL=baseLayerUrl;var baseSource=new XYZSource({url:xyzURL});var baseLayer=new TileLayer({source:baseSource});return baseLayer;}},{key:\"createMap\",value:function createMap(){var baseLayer=this.createBaseLayer();var map=new Map({target:'map',layers:[baseLayer],view:view});return map;}//creates a vector source based on a publised geoserver layer\n},{key:\"createSource\",value:function createSource(typename){var source=new VectorSource({format:new GeoJSON(),url:function url(extent){return\"\".concat(geoserverWfsUrl,\"\\n                &request=GetFeature&typename=\").concat(typename,\"\\n                &outputFormat=application/json\\n                &srsname=EPSG:3857&bbox=\").concat(extent.join(','),\",EPSG:3857\");},strategy:bboxStrategy});return source;}//creates a vector layer based on a vector source from a published geoserver layer\n},{key:\"createVector\",value:function createVector(typename){var vectorSource=this.createSource(typename);var vectorLayer=new VectorLayer({source:vectorSource,extent:vectorSource.getExtent(),style:defaultStyle});vectorLayer.setMinZoom(16);return vectorLayer;}//creates select interaction\n},{key:\"createSelect\",value:function createSelect(){var select=new Select({style:selectedStyle});return select;}},{key:\"createGeolocation\",value:function createGeolocation(map){var geolocation=new Geolocation({tracking:true,projection:'EPSG:3857'});locationFeature.setGeometryName('geom');geolocation.on('change',function(){var coordinate=geolocation.getPosition();var track=locationFeature.getGeometry();track.setCoordinates(coordinate);var center=track.getLastCoordinate();view.animate({zoom:18,duration:3000,center:center});geolocation.setTracking(false);});var trackLayer=new VectorLayer({source:new VectorSource({features:[locationFeature]})});map.addLayer(trackLayer);alert('User successfully located. Map will zoom to current location. Your position will not be tracked.');return geolocation;}},{key:\"removeLastLayer\",value:function removeLastLayer(map){var layers=map.getLayers().getArray();var layer=layers[layers.length-1];layer.getSource().clear();}}]);return MapUtils;}();","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4_Semester/MA/WebGIS/app/src/utils/MapUtils.tsx"],"names":["Map","Geolocation","TileLayer","VectorSource","GeoJSON","bbox","bboxStrategy","VectorLayer","Select","XYZSource","baseLayerUrl","geoserverWfsUrl","view","locationFeature","selectedStyle","defaultStyle","MapUtils","xyzURL","baseSource","url","baseLayer","source","createBaseLayer","map","target","layers","typename","format","extent","join","strategy","vectorSource","createSource","vectorLayer","getExtent","style","setMinZoom","select","geolocation","tracking","projection","setGeometryName","on","coordinate","getPosition","track","getGeometry","setCoordinates","center","getLastCoordinate","animate","zoom","duration","setTracking","trackLayer","features","addLayer","alert","getLayers","getArray","layer","length","getSource","clear"],"mappings":"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","sourcesContent":["\r\nimport { Map, Geolocation } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport { bbox as bboxStrategy } from 'ol/loadingstrategy';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport Select from 'ol/interaction/Select';\r\nimport XYZSource from 'ol/source/XYZ';\r\nimport { baseLayerUrl, geoserverWfsUrl, view, locationFeature } from './MapConfig';\r\nimport { selectedStyle, defaultStyle } from './MapStyles';\r\nimport Point from 'ol/geom/Point';\r\n\r\nexport class MapUtils {\r\n    static createBaseLayer() {\r\n        const xyzURL: string = baseLayerUrl;\r\n        const baseSource: XYZSource = new XYZSource({\r\n            url: xyzURL\r\n        });\r\n        const baseLayer: TileLayer = new TileLayer({\r\n            source: baseSource\r\n        });\r\n\r\n        return baseLayer;\r\n    }\r\n\r\n    static createMap() {\r\n        const baseLayer: TileLayer = this.createBaseLayer();\r\n        const map: Map = new Map({\r\n            target: 'map',\r\n            layers: [baseLayer],\r\n            view: view\r\n        });\r\n        return map;\r\n    }\r\n    //creates a vector source based on a publised geoserver layer\r\n    static createSource(typename: string) {\r\n        const source: VectorSource = new VectorSource({\r\n            format: new GeoJSON(),\r\n            url: function (extent: number[]) {\r\n                return `${geoserverWfsUrl}\r\n                &request=GetFeature&typename=${typename}\r\n                &outputFormat=application/json\r\n                &srsname=EPSG:3857&bbox=${extent.join(',')},EPSG:3857`;\r\n            },\r\n            strategy: bboxStrategy,\r\n        });\r\n        return source;\r\n    }\r\n    //creates a vector layer based on a vector source from a published geoserver layer\r\n    static createVector(typename: string) {\r\n        const vectorSource: VectorSource = this.createSource(typename);\r\n        const vectorLayer: VectorLayer = new VectorLayer({\r\n            source: vectorSource,\r\n            extent: vectorSource.getExtent(),\r\n            style: defaultStyle,\r\n        });\r\n        vectorLayer.setMinZoom(16)\r\n        return vectorLayer;\r\n    }\r\n    //creates select interaction\r\n    static createSelect(): Select {\r\n        const select: Select = new Select({\r\n            style: selectedStyle\r\n        });\r\n        return select;\r\n    }\r\n\r\n    static createGeolocation(map: Map | null): Geolocation {\r\n        const geolocation = new Geolocation({\r\n            tracking: true,\r\n            projection: 'EPSG:3857',\r\n        });\r\n        locationFeature.setGeometryName('geom');\r\n        geolocation.on('change', function () {\r\n            let coordinate: number[] = geolocation.getPosition();\r\n            let track: Point = locationFeature.getGeometry() as Point;\r\n            track.setCoordinates(coordinate);\r\n            let center =  track.getLastCoordinate();\r\n            view.animate({\r\n                zoom: 18,\r\n                duration: 3000,\r\n                center: center,\r\n            })\r\n            geolocation.setTracking(false)\r\n        });\r\n        let trackLayer = new VectorLayer({\r\n            source: new VectorSource({\r\n                features: [locationFeature],\r\n            }),\r\n        });\r\n        map!.addLayer(trackLayer);\r\n        alert('User successfully located. Map will zoom to current location. Your position will not be tracked.')\r\n        return geolocation;\r\n    }\r\n\r\n    static removeLastLayer(map: Map | null) {\r\n        const layers = map!.getLayers().getArray();\r\n        const layer = layers[layers.length - 1] as VectorLayer;\r\n        layer.getSource().clear();\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}