{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Documents\\\\app\\\\src\\\\components\\\\MapSidebar.tsx\";\nimport React, { useState } from 'react';\nimport 'ol/ol.css';\nimport Sidebar from './Sidebar';\nimport Tab from './Tab';\nimport ToggleButton from './ToogleButton';\nimport TabContent from './TabContent';\n\nconst MapSidebar = props => {\n  const [collapsed, setCollapsed] = useState(false);\n  const [selected, setSelected] = useState('home');\n  const [toggleValue, setToggleValue] = useState(false);\n\n  function onClose() {\n    setCollapsed(true); //@ts-ignore\n\n    setSelected(undefined);\n  }\n\n  function onOpen(id) {\n    setCollapsed(false);\n    setSelected(id);\n  }\n\n  ;\n\n  function onToggleChange() {\n    setToggleValue(!toggleValue);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Sidebar, {\n    id: \"sidebar\",\n    collapsed: collapsed,\n    selected: selected,\n    onClose: onClose //@ts-ignore\n    ,\n    doOpen: onOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    id: \"home\",\n    header: \"Home\",\n    faIcon: \"fa fa-bars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(TabContent, {\n    content: \"This is Home.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Tab, {\n    id: \"database\",\n    header: \"Database\",\n    faIcon: \"fa fa-database\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(TabContent, {\n    content: React.createElement(React.Fragment, null, React.createElement(ToggleButton, {\n      id: \"toggleLayer1\",\n      isOn: toggleValue,\n      isOnColor: \"rgba(55,156,214,1)\",\n      handleToggle: onToggleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(ToggleButton, {\n      id: \"toggleLayer2\",\n      isOn: toggleValue,\n      isOnColor: \"rgba(55,156,214,1)\",\n      handleToggle: onToggleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ToggleButton, {\n      id: \"toggleLayer3\",\n      isOn: toggleValue,\n      isOnColor: \"rgba(55,156,214,1)\",\n      handleToggle: onToggleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"/>\"), React.createElement(Tab, {\n    id: \"settings\",\n    header: \"Settings\",\n    faIcon: \"fa fa-cogs\",\n    disabled: true,\n    anchor: \"bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    id: \"off\",\n    header: \"PowerOff\",\n    faIcon: \"fa fa-power-off\",\n    anchor: \"bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nexport default MapSidebar;","map":{"version":3,"sources":["C:/Users/Fabi/Documents/app/src/components/MapSidebar.tsx"],"names":["React","useState","Sidebar","Tab","ToggleButton","TabContent","MapSidebar","props","collapsed","setCollapsed","selected","setSelected","toggleValue","setToggleValue","onClose","undefined","onOpen","id","onToggleChange"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport 'ol/ol.css';\r\nimport { IMapSidebarProps } from '../types/types';\r\nimport Sidebar from './Sidebar';\r\nimport Tab from './Tab';\r\nimport ToggleButton from './ToogleButton';\r\nimport TabContent from './TabContent';\r\n\r\nconst MapSidebar = (props: IMapSidebarProps): JSX.Element => {\r\n\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const [selected, setSelected] = useState('home');\r\n    const [toggleValue, setToggleValue] = useState(false);\r\n\r\n    function onClose() {\r\n        setCollapsed(true);\r\n        //@ts-ignore\r\n        setSelected(undefined);\r\n    }\r\n    function onOpen(id: string) {\r\n        setCollapsed(false)\r\n        setSelected(id)\r\n    };\r\n\r\n    function onToggleChange() {\r\n        setToggleValue(!toggleValue)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Sidebar\r\n                id='sidebar'\r\n                collapsed={collapsed}\r\n                selected={selected}\r\n                onClose={onClose}\r\n                //@ts-ignore\r\n                doOpen={onOpen}\r\n            >\r\n                <Tab\r\n                    id='home'\r\n                    header='Home'\r\n                    faIcon='fa fa-bars'\r\n                >\r\n                    <TabContent content='This is Home.' />\r\n                </Tab>\r\n                <Tab\r\n                    id='database'\r\n                    header='Database'\r\n                    faIcon='fa fa-database'\r\n                >\r\n                    <TabContent content={\r\n                        <>\r\n                            <ToggleButton\r\n                                id='toggleLayer1'\r\n                                isOn={toggleValue}\r\n                                isOnColor='rgba(55,156,214,1)'\r\n                                handleToggle={onToggleChange}\r\n                            />\r\n                            <ToggleButton\r\n                                id='toggleLayer2'\r\n                                isOn={toggleValue}\r\n                                isOnColor='rgba(55,156,214,1)'\r\n                                handleToggle={onToggleChange}\r\n                            />\r\n                            <ToggleButton\r\n                                id='toggleLayer3'\r\n                                isOn={toggleValue}\r\n                                isOnColor='rgba(55,156,214,1)'\r\n                                handleToggle={onToggleChange}\r\n                            />\r\n                        </>\r\n                    } />\r\n                    />\r\n\r\n                </Tab>\r\n                <Tab\r\n                    id='settings'\r\n                    header='Settings'\r\n                    faIcon='fa fa-cogs'\r\n                    disabled={true}\r\n                    anchor='bottom' />\r\n                <Tab\r\n                    id='off'\r\n                    header='PowerOff'\r\n                    faIcon='fa fa-power-off'\r\n                    anchor='bottom' />\r\n            </Sidebar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MapSidebar;"]},"metadata":{},"sourceType":"module"}