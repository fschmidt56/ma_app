{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\app\\\\src\\\\components\\\\Instructions.tsx\";\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { usedIcons } from '../utils/MapConfig';\n\nconst Instructions = props => {\n  const [open, setOpen] = useState([false, false]);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    buttonText: `Besuchte Orte markieren `,\n    faIcon: open[0] ? usedIcons[8] : usedIcons[7],\n    clickButton: () => setOpen([!open[0], open[1]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open[0] ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Zoome in die Karte hinein. Es erscheinen Hausumringe von allen Geb\\xE4uden im Stadtgebiet.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Wenn du an Corona erkrankt bist/warst, kannst du per Klick ein Geb\\xE4ude selektieren in dem du dich kurz vor deiner Diagnose aufgehalten hast.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"W\\xE4hle dann \", React.createElement(\"i\", {\n    className: usedIcons[2],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" vom Men\\xFC links. \\xDCber den dortigen Button kannst du den Status des gew\\xE4hlten Geb\\xE4udes festlegen (true | besucht & false | nicht besucht).\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\xDCber den Update Button sendest du deinen gew\\xE4hlten Status an die Datenbank.\")), React.createElement(Button, {\n    buttonText: `Datenschutz `,\n    faIcon: open[1] ? usedIcons[8] : usedIcons[7],\n    clickButton: () => setOpen([open[0], !open[1]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open[1] ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Select \", React.createElement(\"i\", {\n    className: usedIcons[3],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \" for tracking. You have to enable Geolocation to use this Feature.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Everytime your position changes, your track will be updated on the map.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Click 'Quit Tracking' and your data will be send to the database.\")));\n};\n\nexport default Instructions;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/app/src/components/Instructions.tsx"],"names":["React","useState","Button","usedIcons","Instructions","props","open","setOpen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAA8B;AAE/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAC,KAAD,EAAQ,KAAR,CAAD,CAAhC;AAEA,SACI,0CACI,oBAAC,MAAD;AACI,IAAA,UAAU,EAAG,0BADjB;AAEI,IAAA,MAAM,EAAEK,IAAI,CAAC,CAAD,CAAJ,GAAUH,SAAS,CAAC,CAAD,CAAnB,GAAyBA,SAAS,CAAC,CAAD,CAF9C;AAGI,IAAA,WAAW,EAAE,MAAMI,OAAO,CAAC,CAAC,CAACD,IAAI,CAAC,CAAD,CAAN,EAAWA,IAAI,CAAC,CAAD,CAAf,CAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAK,IAAA,SAAS,EAAEA,IAAI,CAAC,CAAD,CAAJ,GAAU,kBAAV,GAA+B,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe;AAAG,IAAA,SAAS,EAAEH,SAAS,CAAC,CAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,0JAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAJJ,CANJ,EAYI,oBAAC,MAAD;AACI,IAAA,UAAU,EAAG,cADjB;AAEI,IAAA,MAAM,EAAEG,IAAI,CAAC,CAAD,CAAJ,GAAUH,SAAS,CAAC,CAAD,CAAnB,GAAyBA,SAAS,CAAC,CAAD,CAF9C;AAGI,IAAA,WAAW,EAAE,MAAMI,OAAO,CAAC,CAACD,IAAI,CAAC,CAAD,CAAL,EAAU,CAACA,IAAI,CAAC,CAAD,CAAf,CAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAiBI;AAAK,IAAA,SAAS,EAAEA,IAAI,CAAC,CAAD,CAAJ,GAAU,kBAAV,GAA+B,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAW;AAAG,IAAA,SAAS,EAAEH,SAAS,CAAC,CAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,uEADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAHJ,CAjBJ,CADJ;AAyBH,CA7BD;;AA+BA,eAAeC,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { IInstructionProps } from '../types/types';\r\nimport Button from './Button';\r\nimport { usedIcons } from '../utils/MapConfig';\r\n\r\nconst Instructions = (props: IInstructionProps) => {\r\n\r\n    const [open, setOpen] = useState([false, false]);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                buttonText={`Besuchte Orte markieren `}\r\n                faIcon={open[0] ? usedIcons[8] : usedIcons[7]}\r\n                clickButton={() => setOpen([!open[0], open[1]])}\r\n            />\r\n            <div className={open[0] ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                <li>Zoome in die Karte hinein. Es erscheinen Hausumringe von allen Gebäuden im Stadtgebiet.</li>\r\n                <li>Wenn du an Corona erkrankt bist/warst, kannst du per Klick ein Gebäude selektieren in dem du dich kurz vor deiner Diagnose aufgehalten hast.</li>\r\n                <li>Wähle dann <i className={usedIcons[2]}></i> vom Menü links. Über den dortigen Button kannst du den Status des gewählten Gebäudes festlegen (true | besucht & false | nicht besucht).</li>\r\n                <li>Über den Update Button sendest du deinen gewählten Status an die Datenbank.</li>\r\n            </div>\r\n            <Button\r\n                buttonText={`Datenschutz `}\r\n                faIcon={open[1] ? usedIcons[8] : usedIcons[7]}\r\n                clickButton={() => setOpen([open[0], !open[1]])}\r\n            />\r\n            <div className={open[1] ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                <li>Select <i className={usedIcons[3]}></i> for tracking. You have to enable Geolocation to use this Feature.</li>\r\n                <li>Everytime your position changes, your track will be updated on the map.</li>\r\n                <li>Click 'Quit Tracking' and your data will be send to the database.</li>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Instructions;\r\n"]},"metadata":{},"sourceType":"module"}