{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Documents\\\\app\\\\src\\\\components\\\\Instructions.tsx\";\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { usedIcons } from '../utils/MapConfig';\n\nconst Instructions = props => {\n  const [open, setOpen] = useState(false);\n  const [inst, setInst] = useState(undefined);\n\n  function showInstructions(inst) {\n    setOpen(!open);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    id: \"instLocation\",\n    buttonText: `Set visited location `,\n    faIcon: open ? usedIcons[8] : usedIcons[7],\n    clickButton: showInstructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Tab/Click a building you have visited within two weeks before your diagnosis. A selected building gets a thick orange border.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Select \", React.createElement(\"i\", {\n    className: usedIcons[2],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \" from the menu. Set a visited builiding to true with the ToggleButton. \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Click Update. The map view will refresh and the selected building will change its color.\")), React.createElement(Button, {\n    id: \"instTrack\",\n    buttonText: `Track position... `,\n    faIcon: open ? usedIcons[8] : usedIcons[7],\n    clickButton: showInstructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Select \", React.createElement(\"i\", {\n    className: usedIcons[3],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \" for tracking. You have to enable Geolocation to use this Feature.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Everytime your position changes, your track will be updated on the map.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Click 'Quit Tracking' and your data will be send to the database.\")));\n};\n\nexport default Instructions;","map":{"version":3,"sources":["C:/Users/Fabi/Documents/app/src/components/Instructions.tsx"],"names":["React","useState","Button","usedIcons","Instructions","props","open","setOpen","inst","setInst","undefined","showInstructions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAA8B;AAE/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACS,SAAD,CAAhC;;AAEA,WAASC,gBAAT,CAA0BH,IAA1B,EAAwC;AACpCD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AAEH;;AAED,SACI,0CACI,oBAAC,MAAD;AACI,IAAA,EAAE,EAAC,cADP;AAEI,IAAA,UAAU,EAAG,uBAFjB;AAGI,IAAA,MAAM,EAAEA,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAZ,GAAkBA,SAAS,CAAC,CAAD,CAH3C;AAII,IAAA,WAAW,EAAEQ,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAK,IAAA,SAAS,EAAEL,IAAI,GAAG,kBAAH,GAAwB,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAW;AAAG,IAAA,SAAS,EAAEH,SAAS,CAAC,CAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,4EAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAHJ,CAPJ,EAYI,oBAAC,MAAD;AACI,IAAA,EAAE,EAAC,WADP;AAEI,IAAA,UAAU,EAAG,oBAFjB;AAGI,IAAA,MAAM,EAAEG,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAZ,GAAkBA,SAAS,CAAC,CAAD,CAH3C;AAII,IAAA,WAAW,EAAEQ,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAkBI;AAAK,IAAA,SAAS,EAAEL,IAAI,GAAG,kBAAH,GAAwB,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAW;AAAG,IAAA,SAAS,EAAEH,SAAS,CAAC,CAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,uEADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAHJ,CAlBJ,CADJ;AA0BH,CApCD;;AAsCA,eAAeC,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { IInstructionProps } from '../types/types';\r\nimport Button from './Button';\r\nimport { usedIcons } from '../utils/MapConfig';\r\n\r\nconst Instructions = (props: IInstructionProps) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [inst, setInst] = useState(undefined);\r\n\r\n    function showInstructions(inst: string) {\r\n        setOpen(!open)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                id='instLocation'\r\n                buttonText={`Set visited location `}\r\n                faIcon={open ? usedIcons[8] : usedIcons[7]}\r\n                clickButton={showInstructions}\r\n            />\r\n            <div className={open ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                <li >Tab/Click a building you have visited within two weeks before your diagnosis. A selected building gets a thick orange border.</li>\r\n                <li>Select <i className={usedIcons[2]}></i> from the menu. Set a visited builiding to true with the ToggleButton. </li>\r\n                <li>Click Update. The map view will refresh and the selected building will change its color.</li>\r\n            </div>\r\n            <Button\r\n                id='instTrack'\r\n                buttonText={`Track position... `}\r\n                faIcon={open ? usedIcons[8] : usedIcons[7]}\r\n                clickButton={showInstructions}\r\n            />\r\n            <div className={open ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                <li>Select <i className={usedIcons[3]}></i> for tracking. You have to enable Geolocation to use this Feature.</li>\r\n                <li>Everytime your position changes, your track will be updated on the map.</li>\r\n                <li>Click 'Quit Tracking' and your data will be send to the database.</li>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Instructions;\r\n"]},"metadata":{},"sourceType":"module"}