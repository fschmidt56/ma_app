{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4_Semester\\\\MA\\\\WebGIS\\\\app\\\\src\\\\components\\\\Instructions.tsx\";\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { usedIcons } from '../utils/MapConfig';\n\nconst Instructions = props => {\n  const {\n    token,\n    handleToken\n  } = props;\n  const [open, setOpen] = useState([false, true, false]);\n\n  async function hashUser() {\n    fetch('http://corona.geomatik.ruhr-uni-bochum.de/api/hash').then(response => response.json()).then(value => {\n      localStorage.setItem('VgiUserToken', value);\n      handleToken(value);\n    });\n  }\n\n  async function removeToken() {\n    localStorage.removeItem('VgiUserToken');\n    handleToken(null);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Button, {\n    buttonText: `Token erneuern `,\n    faIcon: `${usedIcons[9]}`,\n    clickButton: () => hashUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), token === null ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Ich m\\xF6chte anonym Daten beitragen.\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Ich erkl\\xE4re mich einverstanden, dass mein Pseudonym f\\xFCr das wissenschaftliche Erkenntnisinteresse dieser Arbeit gespeichert wird. Es darf f\\xFCr keine anderen Zwecke verwendet werden. Erste 10 Zeichen des Tokens:\", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" \", token.substring(0, 10))), React.createElement(Button, {\n    buttonText: `Token entfernen `,\n    faIcon: `${usedIcons[10]}`,\n    clickButton: () => removeToken(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonText: `Besuchte Orte markieren `,\n    faIcon: open[0] ? usedIcons[8] : usedIcons[7],\n    clickButton: () => setOpen([!open[0], open[1], open[2]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open[0] ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Zoome in die Karte hinein. Es erscheinen Hausumringe von allen Geb\\xE4uden im Stadtgebiet.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Wenn du an Corona erkrankt bist/warst, kannst du per Klick ein Geb\\xE4ude selektieren in dem du dich kurz vor deiner Diagnose aufgehalten hast.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"W\\xE4hle dann \", React.createElement(\"i\", {\n    className: usedIcons[2],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \" vom Men\\xFC links. \\xDCber den dortigen Button kannst du den Status des gew\\xE4hlten Geb\\xE4udes festlegen (true | besucht & false | nicht besucht).\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\xDCber den Update Button sendest du deinen gew\\xE4hlten Status an die Datenbank.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Du kannst frei entscheiden zu welchen Geb\\xE4uden du Informationen teilen m\\xF6chtest. Es ist f\\xFCr uns und andere nicht ersichtlich welche Geb\\xE4ude du editierst. Die Daten werden direkt bei der Erfassung aggregiert.\")), React.createElement(Button, {\n    buttonText: `Datenschutz `,\n    faIcon: open[1] ? usedIcons[8] : usedIcons[7],\n    clickButton: () => setOpen([open[0], !open[1], open[2]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open[1] ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Bei der Datenerhebung werden keine nutzerspezifischen Daten erfasst. Jedem User wird ein zuf\\xE4llig generiertes Pseudonym in Form eines Tokens zugeordnet. Eine Registrierung ist nicht erforderlich. Die Daten werden nach Abschluss des Projektes gel\\xF6scht.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Bei einem Update eines Geb\\xE4udes sendest du nur den gew\\xE4hlten Status von diesem. Gleichzeitig wird der Zeitpunkt der letzten Aktualisierung in der Datenbank gespeichert sowie das Pseudonym des Nutzers. Letzteres wird getrennt vom jeweiligen Geb\\xE4udedatensatz abgespeichert, sodass nicht nachvollzogen werden kann welches Geb\\xE4ude du editiert hast.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Die hier erfassten Daten d\\xFCrfen nicht kommerziell oder f\\xFCr andere Zwecke genutzt werden. Sie dienen ausschlie\\xDFlich dem wissenschaftlichen Erkenntnisinteresse dieser Arbeit.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Die dargestellten Hausumringe basieren auf einem Datensatz der \", React.createElement(\"a\", {\n    target: \"_blank\",\n    href: \"https://www.bezreg-koeln.nrw.de/brk_internet/geobasis/liegenschaftskataster/hausumringe/index.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" Bezirksregierung K\\xF6ln\"), \".\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Falls du nicht m\\xF6chtest, dass nachvollzogen werden kann wie viele Datens\\xE4tze von dir editiert worden sind, kannst du dein Pseudonym nach jeder \\xC4nderung erneuern.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Falls du komplett anonym Daten beitragen m\\xF6chtest, kannst du \\xFCber den Button oebn jederzeit dein Pseudonym entfernen.\")), React.createElement(Button, {\n    buttonText: `Impressum `,\n    faIcon: open[2] ? usedIcons[8] : usedIcons[7],\n    clickButton: () => setOpen([open[0], open[1], !open[2]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open[2] ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"imprinttext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Die Ruhr-Universit\\xE4t ist eine K\\xF6rperschaft des \\xD6ffentlichen Rechts. Sie wird durch ihren Rektor Herrn Prof. Dr. Axel Sch\\xF6lmerich gesetzlich vertreten. Zust\\xE4ndige Aufsichtsbeh\\xF6rde ist: Ministerium f\\xFCr Innovation, Wissenschaft und Forschung des Landes Nordrhein-Westfalen V\\xF6lklinger Stra\\xDFe 49 40221 D\\xFCsseldorf Soweit nicht anders gekennzeichnet ist das Geographische Institut der Ruhr-Universit\\xE4t Bochum ist Urheber aller Texte, des Layouts und der Fotos auf allen Internetseiten, die auf dieses Impressum verweisen. Die Inhalte sind urheberrechtlich gesch\\xFCtzt. F\\xFCr alle anderen Inhalte auf www-Servern der Ruhr-Universit\\xE4t Bochum sind die jeweiligen Bereiche redaktionell verantwortlich. Das Geographische Institut der Ruhr-Universit\\xE4t Bochum \\xFCbernimmt keine Gew\\xE4hr f\\xFCr die Richtigkeit und Vollst\\xE4ndigkeit der auf seinen Internetseiten befindlichen Informationen. Das gleiche gilt f\\xFCr die Inhalte verlinkter Seiten. Anfragen per Mail an: \", React.createElement(\"a\", {\n    className: \"imprinttext\",\n    href: \"mailto:fabian.schmidt-c8t@rub.de\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Fabian Schmidt\")))));\n};\n\nexport default Instructions;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4_Semester/MA/WebGIS/app/src/components/Instructions.tsx"],"names":["React","useState","Button","usedIcons","Instructions","props","token","handleToken","open","setOpen","hashUser","fetch","then","response","json","value","localStorage","setItem","removeToken","removeItem","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { IInstructionProps } from '../types/types';\r\nimport Button from './Button';\r\nimport { usedIcons } from '../utils/MapConfig';\r\n\r\n\r\nconst Instructions = (props: IInstructionProps) => {\r\n    const { token, handleToken } = props\r\n    const [open, setOpen] = useState([false, true, false]);\r\n\r\n    async function hashUser() {\r\n        fetch('http://corona.geomatik.ruhr-uni-bochum.de/api/hash')\r\n            .then(response => response.json())\r\n            .then(value => {\r\n                localStorage.setItem('VgiUserToken', value)\r\n                handleToken!(value)\r\n            })\r\n\r\n    }\r\n\r\n    async function removeToken() {\r\n        localStorage.removeItem('VgiUserToken')\r\n        handleToken!(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Button\r\n                    buttonText={`Token erneuern `}\r\n                    faIcon={`${usedIcons[9]}`}\r\n                    clickButton={() => hashUser()}\r\n                />\r\n                {\r\n                    token === null ?\r\n                        <p>Ich möchte anonym Daten beitragen.</p>\r\n                        :\r\n                        <p>Ich erkläre mich einverstanden, dass mein Pseudonym für das wissenschaftliche Erkenntnisinteresse dieser Arbeit gespeichert wird. Es darf für keine anderen Zwecke verwendet werden. Erste 10 Zeichen des Tokens:<b> {token!.substring(0, 10)}</b></p>\r\n\r\n                }\r\n                <Button\r\n                    buttonText={`Token entfernen `}\r\n                    faIcon={`${usedIcons[10]}`}\r\n                    clickButton={() => removeToken()}\r\n                />\r\n                <Button\r\n                    buttonText={`Besuchte Orte markieren `}\r\n                    faIcon={open[0] ? usedIcons[8] : usedIcons[7]}\r\n                    clickButton={() => setOpen([!open[0], open[1], open[2]])}\r\n                />\r\n                <div className={open[0] ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                    <li>Zoome in die Karte hinein. Es erscheinen Hausumringe von allen Gebäuden im Stadtgebiet.</li>\r\n                    <li>Wenn du an Corona erkrankt bist/warst, kannst du per Klick ein Gebäude selektieren in dem du dich kurz vor deiner Diagnose aufgehalten hast.</li>\r\n                    <li>Wähle dann <i className={usedIcons[2]}></i> vom Menü links. Über den dortigen Button kannst du den Status des gewählten Gebäudes festlegen (true | besucht & false | nicht besucht).</li>\r\n                    <li>Über den Update Button sendest du deinen gewählten Status an die Datenbank.</li>\r\n                    <li>Du kannst frei entscheiden zu welchen Gebäuden du Informationen teilen möchtest. Es ist für uns und andere nicht ersichtlich welche Gebäude du editierst. Die Daten werden direkt bei der Erfassung aggregiert.</li>\r\n                </div>\r\n                <Button\r\n                    buttonText={`Datenschutz `}\r\n                    faIcon={open[1] ? usedIcons[8] : usedIcons[7]}\r\n                    clickButton={() => setOpen([open[0], !open[1], open[2]])}\r\n                />\r\n                <div className={open[1] ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                    <li>Bei der Datenerhebung werden keine nutzerspezifischen Daten erfasst. Jedem User wird ein zufällig generiertes Pseudonym in Form eines Tokens zugeordnet. Eine Registrierung ist nicht erforderlich. Die Daten werden nach Abschluss des Projektes gelöscht.</li>\r\n                    <li>Bei einem Update eines Gebäudes sendest du nur den gewählten Status von diesem. Gleichzeitig wird der Zeitpunkt der letzten Aktualisierung in der Datenbank gespeichert sowie das Pseudonym des Nutzers. Letzteres wird getrennt vom jeweiligen Gebäudedatensatz abgespeichert, sodass nicht nachvollzogen werden kann welches Gebäude du editiert hast.</li>\r\n                    <li>Die hier erfassten Daten dürfen nicht kommerziell oder für andere Zwecke genutzt werden. Sie dienen ausschließlich dem wissenschaftlichen Erkenntnisinteresse dieser Arbeit.</li>\r\n                    <li>Die dargestellten Hausumringe basieren auf einem Datensatz der <a target='_blank' href='https://www.bezreg-koeln.nrw.de/brk_internet/geobasis/liegenschaftskataster/hausumringe/index.html'> Bezirksregierung Köln</a>.</li>\r\n                    <li>Falls du nicht möchtest, dass nachvollzogen werden kann wie viele Datensätze von dir editiert worden sind, kannst du dein Pseudonym nach jeder Änderung erneuern.</li>\r\n                    <li>Falls du komplett anonym Daten beitragen möchtest, kannst du über den Button oebn jederzeit dein Pseudonym entfernen.</li>\r\n                </div>\r\n                <Button\r\n                    buttonText={`Impressum `}\r\n                    faIcon={open[2] ? usedIcons[8] : usedIcons[7]}\r\n                    clickButton={() => setOpen([open[0], open[1], !open[2]])}\r\n                />\r\n                <div className={open[2] ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                    <p className='imprinttext'>\r\n                        Die Ruhr-Universität ist eine Körperschaft des Öffentlichen Rechts. Sie wird durch ihren Rektor Herrn Prof. Dr. Axel Schölmerich gesetzlich vertreten.\r\n                        Zuständige Aufsichtsbehörde ist:\r\n                        Ministerium für Innovation, Wissenschaft und Forschung des Landes Nordrhein-Westfalen\r\n                        Völklinger Straße 49\r\n                        40221 Düsseldorf\r\n                        Soweit nicht anders gekennzeichnet ist das Geographische Institut der Ruhr-Universität Bochum ist Urheber aller Texte, des Layouts und der Fotos auf allen Internetseiten, die auf dieses Impressum verweisen. Die Inhalte sind urheberrechtlich geschützt. Für alle anderen Inhalte auf www-Servern der Ruhr-Universität Bochum sind die jeweiligen Bereiche redaktionell verantwortlich.\r\n                        Das Geographische Institut der Ruhr-Universität Bochum übernimmt keine Gewähr für die Richtigkeit und Vollständigkeit der auf seinen Internetseiten befindlichen Informationen. Das gleiche gilt für die Inhalte verlinkter Seiten.\r\n                        Anfragen per Mail an: <a className='imprinttext' href='mailto:fabian.schmidt-c8t@rub.de'>Fabian Schmidt</a>\r\n                    </p>                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Instructions;\r\n"]},"metadata":{},"sourceType":"module"}