{"ast":null,"code":"import WFS from'ol/format/WFS';import View from\"ol/View\";import Feature from\"ol/Feature\";import Point from\"ol/geom/Point\";var baseLayerArr=['https://{1-4}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png','https://{1-4}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png','https://{1-4}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png','https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}','https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}','https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'];export var baseLayerUrl=baseLayerArr[2];export var mapCenter=[774577.0148,6610935.8641];export var mapZoom=13;export var maxZoom=19;export var minZoom=12;export var rotationStatus=false;export var view=new View({center:mapCenter,zoom:mapZoom,maxZoom:maxZoom,minZoom:minZoom,enableRotation:rotationStatus});export var serverName=['http://192.168.2.185:8080/','http://corona.geomatik.ruhr-uni-bochum.de/'];export var geoserverWfsUrl=\"\".concat(serverName[0],\"geoserver/pg/wfs?service=WFS&version=1.1.0\");export var typeName=['pg:hu_koeln'];export var wfsTransaction=new WFS();export var updateParameters={featureNS:'pg',featurePrefix:'pg',featureType:typeName[0],nativeElements:[],srsName:'EPSG:3857'};export var insertParameters={featureNS:'pg',featurePrefix:'pg',featureType:typeName[1],nativeElements:[],srsName:'EPSG:3857'};export var locationFeature=new Feature({geom:new Point([])});export var usedIcons=['fa fa-home','fa fa-info','fa fa-mouse-pointer','fa fa-map-marker','fa fa-twitter','fa fa-cogs','fa fa-result','fa fa-chevron-down','fa fa-chevron-up','fa fa-refresh','fa fa-trash'];export var geoserverFetchUrl=\"\".concat(serverName[0],\"handleGeoserver\");export var license='https://creativecommons.org/licenses/by-nc-nd/4.0/deed.de';","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4_Semester/MA/WebGIS/app/src/utils/MapConfig.tsx"],"names":["WFS","View","Feature","Point","baseLayerArr","baseLayerUrl","mapCenter","mapZoom","maxZoom","minZoom","rotationStatus","view","center","zoom","enableRotation","serverName","geoserverWfsUrl","typeName","wfsTransaction","updateParameters","featureNS","featurePrefix","featureType","nativeElements","srsName","insertParameters","locationFeature","geom","usedIcons","geoserverFetchUrl","license"],"mappings":"AACA,MAAOA,CAAAA,GAAP,KAAgB,eAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CAEA,GAAMC,CAAAA,YAAsB,CAAG,CAC3B,iEAD2B,CAE3B,kEAF2B,CAG3B,4EAH2B,CAI3B,8GAJ2B,CAK3B,6GAL2B,CAM3B,+FAN2B,CAA/B,CASA,MAAO,IAAMC,CAAAA,YAAoB,CAAGD,YAAY,CAAC,CAAD,CAAzC,CACP,MAAO,IAAME,CAAAA,SAAmB,CAAG,CAAC,WAAD,CAAa,YAAb,CAA5B,CACP,MAAO,IAAMC,CAAAA,OAAe,CAAG,EAAxB,CACP,MAAO,IAAMC,CAAAA,OAAe,CAAG,EAAxB,CACP,MAAO,IAAMC,CAAAA,OAAe,CAAG,EAAxB,CACP,MAAO,IAAMC,CAAAA,cAAuB,CAAG,KAAhC,CACP,MAAO,IAAMC,CAAAA,IAAI,CAAG,GAAIV,CAAAA,IAAJ,CAAS,CACzBW,MAAM,CAAEN,SADiB,CAEzBO,IAAI,CAAEN,OAFmB,CAGzBC,OAAO,CAAEA,OAHgB,CAIzBC,OAAO,CAAEA,OAJgB,CAKzBK,cAAc,CAAEJ,cALS,CAAT,CAAb,CAOP,MAAO,IAAMK,CAAAA,UAAoB,CAAG,CAAC,4BAAD,CAA+B,4CAA/B,CAA7B,CACP,MAAO,IAAMC,CAAAA,eAAuB,WAAMD,UAAU,CAAC,CAAD,CAAhB,8CAA7B,CACP,MAAO,IAAME,CAAAA,QAAkB,CAAG,CAC9B,aAD8B,CAA3B,CAGP,MAAO,IAAMC,CAAAA,cAAmB,CAAG,GAAIlB,CAAAA,GAAJ,EAA5B,CAEP,MAAO,IAAMmB,CAAAA,gBAA0D,CAAG,CACtEC,SAAS,CAAE,IAD2D,CAEtEC,aAAa,CAAE,IAFuD,CAGtEC,WAAW,CAAEL,QAAQ,CAAC,CAAD,CAHiD,CAItEM,cAAc,CAAE,EAJsD,CAKtEC,OAAO,CAAE,WAL6D,CAAnE,CAQP,MAAO,IAAMC,CAAAA,gBAA0D,CAAG,CACtEL,SAAS,CAAE,IAD2D,CAEtEC,aAAa,CAAE,IAFuD,CAGtEC,WAAW,CAAEL,QAAQ,CAAC,CAAD,CAHiD,CAItEM,cAAc,CAAE,EAJsD,CAKtEC,OAAO,CAAE,WAL6D,CAAnE,CAQP,MAAO,IAAME,CAAAA,eAAwB,CAAG,GAAIxB,CAAAA,OAAJ,CAAY,CAChDyB,IAAI,CAAE,GAAIxB,CAAAA,KAAJ,CAAU,EAAV,CAD0C,CAAZ,CAAjC,CAIP,MAAO,IAAMyB,CAAAA,SAAmB,CAAG,CAC/B,YAD+B,CAE/B,YAF+B,CAG/B,qBAH+B,CAI/B,kBAJ+B,CAK/B,eAL+B,CAM/B,YAN+B,CAO/B,cAP+B,CAQ/B,oBAR+B,CAS/B,kBAT+B,CAU/B,eAV+B,CAW/B,aAX+B,CAA5B,CAcP,MAAO,IAAMC,CAAAA,iBAAiB,WAAMd,UAAU,CAAC,CAAD,CAAhB,mBAAvB,CACP,MAAO,IAAMe,CAAAA,OAAO,CAAG,2DAAhB","sourcesContent":["import { ITransactionsGeoserver } from \"../types/types\";\r\nimport WFS from 'ol/format/WFS';\r\nimport View from \"ol/View\";\r\nimport Feature from \"ol/Feature\";\r\nimport Point from \"ol/geom/Point\";\r\n\r\nconst baseLayerArr: string[] = [\r\n    'https://{1-4}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png',\r\n    'https://{1-4}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png',\r\n    'https://{1-4}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}',\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}',\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\r\n];\r\n\r\nexport const baseLayerUrl: string = baseLayerArr[2];\r\nexport const mapCenter: number[] = [774577.0148,6610935.8641];\r\nexport const mapZoom: number = 13;\r\nexport const maxZoom: number = 19;\r\nexport const minZoom: number = 12;\r\nexport const rotationStatus: boolean = false;\r\nexport const view = new View({\r\n    center: mapCenter,\r\n    zoom: mapZoom,\r\n    maxZoom: maxZoom,\r\n    minZoom: minZoom,\r\n    enableRotation: rotationStatus,\r\n})\r\nexport const serverName: string[] = ['http://192.168.2.185:8080/', 'http://corona.geomatik.ruhr-uni-bochum.de/']\r\nexport const geoserverWfsUrl: string = `${serverName[0]}geoserver/pg/wfs?service=WFS&version=1.1.0`;\r\nexport const typeName: string[] = [\r\n    'pg:hu_koeln',\r\n];\r\nexport const wfsTransaction: WFS = new WFS();\r\n\r\nexport const updateParameters: ITransactionsGeoserver<string, object[]> = {\r\n    featureNS: 'pg',\r\n    featurePrefix: 'pg',\r\n    featureType: typeName[0],\r\n    nativeElements: [],\r\n    srsName: 'EPSG:3857',\r\n};\r\n\r\nexport const insertParameters: ITransactionsGeoserver<string, object[]> = {\r\n    featureNS: 'pg',\r\n    featurePrefix: 'pg',\r\n    featureType: typeName[1],\r\n    nativeElements: [],\r\n    srsName: 'EPSG:3857',\r\n};\r\n\r\nexport const locationFeature: Feature = new Feature({\r\n    geom: new Point([]),\r\n})\r\n\r\nexport const usedIcons: string[] = [\r\n    'fa fa-home',\r\n    'fa fa-info',\r\n    'fa fa-mouse-pointer',\r\n    'fa fa-map-marker',\r\n    'fa fa-twitter',\r\n    'fa fa-cogs',\r\n    'fa fa-result',\r\n    'fa fa-chevron-down',\r\n    'fa fa-chevron-up',\r\n    'fa fa-refresh',\r\n    'fa fa-trash',\r\n];\r\n\r\nexport const geoserverFetchUrl = `${serverName[0]}handleGeoserver`;\r\nexport const license = 'https://creativecommons.org/licenses/by-nc-nd/4.0/deed.de';\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}