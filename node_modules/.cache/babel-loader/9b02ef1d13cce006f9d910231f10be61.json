{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\app\\\\src\\\\components\\\\Instructions.tsx\";\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { usedIcons, license } from '../utils/MapConfig';\nimport Image from './Image';\nimport cc from '../img/cc.png';\n\nconst Instructions = props => {\n  const [open, setOpen] = useState([false, false]);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    buttonText: `Besuchte Orte markieren `,\n    faIcon: open[0] ? usedIcons[8] : usedIcons[7],\n    clickButton: () => setOpen([!open[0], open[1]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open[0] ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Zoome in die Karte hinein. Es erscheinen Hausumringe von allen Geb\\xE4uden im Stadtgebiet.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Wenn du an Corona erkrankt bist/warst, kannst du per Klick ein Geb\\xE4ude selektieren in dem du dich kurz vor deiner Diagnose aufgehalten hast.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"W\\xE4hle dann \", React.createElement(\"i\", {\n    className: usedIcons[2],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \" vom Men\\xFC links. \\xDCber den dortigen Button kannst du den Status des gew\\xE4hlten Geb\\xE4udes festlegen (true | besucht & false | nicht besucht).\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"\\xDCber den Update Button sendest du deinen gew\\xE4hlten Status an die Datenbank.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Du kannst frei entscheiden zu welchen Geb\\xE4uden du Informationen teilen m\\xF6chtest. Du kannst den Status eines Geb\\xE4udes jederzeit wieder auf gleichem Weg \\xE4ndern.\")), React.createElement(Button, {\n    buttonText: `Datenschutz `,\n    faIcon: open[1] ? usedIcons[8] : usedIcons[7],\n    clickButton: () => setOpen([open[0], !open[1]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: open[1] ? 'notCollapsedInst' : 'collapsedInst',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Bei der Datenerhebung werden keine nutzerspezifischen Daten erfasst. Jedem User wird ein vom Server zuf\\xE4llig generiertes Pseudonym in Form eines 128-stelligen Tokens zugeordnet. Eine Registrierung ist nicht erforderlich.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Bei einem Update eines Geb\\xE4udes sendest du nur den gew\\xE4hlten Status von diesem. Gleichzeitig wird der Zeitpunkt der letzten Aktualisierung in der Datenbank gespeichert sowie das Pseudonym des Nutzers.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Du kannst die Ergebnisse der Datenerhebung live \", React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"HIER \"), \"mitverfolgen.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Wenn du dich mit Geodaten auskennst, kannst du \\xFCber diese \", React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"API\"), \" aktuelle Daten der Erhebung im GeoJSON-Format abrufen. Dabei gelten die Lizenzbestimmungen nach \", React.createElement(\"a\", {\n    href: license,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"CC BY-NC-ND 4.0\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Die dargestellten Hausumringe basieren auf einem Datensatz der \", React.createElement(\"a\", {\n    href: \"https://www.bezreg-koeln.nrw.de/brk_internet/geobasis/liegenschaftskataster/hausumringe/index.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Bezirksregierung K\\xF6ln.\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Image, {\n    altText: \"Namensnennung - Nicht kommerziell - Keine Bearbeitungen 4.0 International (CC BY-NC-ND 4.0)\",\n    img: cc,\n    link: license,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};\n\nexport default Instructions;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/app/src/components/Instructions.tsx"],"names":["React","useState","Button","usedIcons","license","Image","cc","Instructions","props","open","setOpen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,eAAf;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAA8B;AAE/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAC,KAAD,EAAQ,KAAR,CAAD,CAAhC;AAEA,SACI,0CACI,oBAAC,MAAD;AACI,IAAA,UAAU,EAAG,0BADjB;AAEI,IAAA,MAAM,EAAEQ,IAAI,CAAC,CAAD,CAAJ,GAAUN,SAAS,CAAC,CAAD,CAAnB,GAAyBA,SAAS,CAAC,CAAD,CAF9C;AAGI,IAAA,WAAW,EAAE,MAAMO,OAAO,CAAC,CAAC,CAACD,IAAI,CAAC,CAAD,CAAN,EAAWA,IAAI,CAAC,CAAD,CAAf,CAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAK,IAAA,SAAS,EAAEA,IAAI,CAAC,CAAD,CAAJ,GAAU,kBAAV,GAA+B,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe;AAAG,IAAA,SAAS,EAAEN,SAAS,CAAC,CAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,0JAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kLALJ,CANJ,EAaI,oBAAC,MAAD;AACI,IAAA,UAAU,EAAG,cADjB;AAEI,IAAA,MAAM,EAAEM,IAAI,CAAC,CAAD,CAAJ,GAAUN,SAAS,CAAC,CAAD,CAAnB,GAAyBA,SAAS,CAAC,CAAD,CAF9C;AAGI,IAAA,WAAW,EAAE,MAAMO,OAAO,CAAC,CAACD,IAAI,CAAC,CAAD,CAAL,EAAU,CAACA,IAAI,CAAC,CAAD,CAAf,CAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAkBI;AAAK,IAAA,SAAS,EAAEA,IAAI,CAAC,CAAD,CAAJ,GAAU,kBAAV,GAA+B,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uOADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sNAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAoD;AAAG,IAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApD,kBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAA8D;AAAG,IAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA9D,uGAAiL;AAAG,IAAA,IAAI,EAAEL,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjL,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAAmE;AAAG,IAAA,IAAI,EAAC,oGAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAnE,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,KAAD;AACA,IAAA,OAAO,EAAC,6FADR;AAEA,IAAA,GAAG,EAAEE,EAFL;AAGA,IAAA,IAAI,EAAEF,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAlBJ,CADJ;AAkCH,CAtCD;;AAwCA,eAAeG,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { IInstructionProps } from '../types/types';\r\nimport Button from './Button';\r\nimport { usedIcons, license } from '../utils/MapConfig';\r\nimport Image from './Image';\r\nimport cc from '../img/cc.png';\r\n\r\n\r\nconst Instructions = (props: IInstructionProps) => {\r\n\r\n    const [open, setOpen] = useState([false, false]);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                buttonText={`Besuchte Orte markieren `}\r\n                faIcon={open[0] ? usedIcons[8] : usedIcons[7]}\r\n                clickButton={() => setOpen([!open[0], open[1]])}\r\n            />\r\n            <div className={open[0] ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                <li>Zoome in die Karte hinein. Es erscheinen Hausumringe von allen Gebäuden im Stadtgebiet.</li>\r\n                <li>Wenn du an Corona erkrankt bist/warst, kannst du per Klick ein Gebäude selektieren in dem du dich kurz vor deiner Diagnose aufgehalten hast.</li>\r\n                <li>Wähle dann <i className={usedIcons[2]}></i> vom Menü links. Über den dortigen Button kannst du den Status des gewählten Gebäudes festlegen (true | besucht & false | nicht besucht).</li>\r\n                <li>Über den Update Button sendest du deinen gewählten Status an die Datenbank.</li>\r\n                <li>Du kannst frei entscheiden zu welchen Gebäuden du Informationen teilen möchtest. Du kannst den Status eines Gebäudes jederzeit wieder auf gleichem Weg ändern.</li>\r\n            </div>\r\n            <Button\r\n                buttonText={`Datenschutz `}\r\n                faIcon={open[1] ? usedIcons[8] : usedIcons[7]}\r\n                clickButton={() => setOpen([open[0], !open[1]])}\r\n            />\r\n            <div className={open[1] ? 'notCollapsedInst' : 'collapsedInst'}>\r\n                <li>Bei der Datenerhebung werden keine nutzerspezifischen Daten erfasst. Jedem User wird ein vom Server zufällig generiertes Pseudonym in Form eines 128-stelligen Tokens zugeordnet. Eine Registrierung ist nicht erforderlich.</li>\r\n                <li>Bei einem Update eines Gebäudes sendest du nur den gewählten Status von diesem. Gleichzeitig wird der Zeitpunkt der letzten Aktualisierung in der Datenbank gespeichert sowie das Pseudonym des Nutzers.</li>\r\n                <li>Du kannst die Ergebnisse der Datenerhebung live <a href=''>HIER </a>mitverfolgen.</li>\r\n                <li>Wenn du dich mit Geodaten auskennst, kannst du über diese <a href=''>API</a> aktuelle Daten der Erhebung im GeoJSON-Format abrufen. Dabei gelten die Lizenzbestimmungen nach <a href={license}>CC BY-NC-ND 4.0</a></li>\r\n                <li>Die dargestellten Hausumringe basieren auf einem Datensatz der <a href='https://www.bezreg-koeln.nrw.de/brk_internet/geobasis/liegenschaftskataster/hausumringe/index.html'> Bezirksregierung Köln.</a></li>\r\n                <hr></hr>\r\n                <Image \r\n                altText='Namensnennung - Nicht kommerziell - Keine Bearbeitungen 4.0 International (CC BY-NC-ND 4.0)'\r\n                img={cc}\r\n                link={license}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Instructions;\r\n"]},"metadata":{},"sourceType":"module"}