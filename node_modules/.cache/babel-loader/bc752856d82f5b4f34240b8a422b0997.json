{"ast":null,"code":"import { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZSource from 'ol/source/XYZ';\nimport { baseLayerUrl, mapCenter, mapZoom, rotationStatus } from './MapConfig';\nimport VectorSource from 'ol/source/Vector';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport { Projections } from '../types/types';\nexport class MapUtils {\n  static createBaseLayer() {\n    const xyzURL = baseLayerUrl;\n    const baseSource = new XYZSource({\n      url: xyzURL\n    });\n    const baseLayer = new TileLayer({\n      source: baseSource\n    });\n    return baseLayer;\n  }\n\n  static createMap() {\n    const baseLayer = this.createBaseLayer();\n    const map = new Map({\n      target: 'map',\n      layers: [baseLayer],\n      view: new View({\n        center: mapCenter,\n        zoom: mapZoom,\n        enableRotation: rotationStatus\n      })\n    });\n    return map;\n  }\n\n  static createVectorSource(data) {\n    const vectorSource = new VectorSource({\n      format: new GeoJSON({\n        dataProjection: Projections.EPSG_4326,\n        featureProjection: Projections.EPSG_3857\n      })\n    });\n    let geoJsonData = new GeoJSON({\n      dataProjection: Projections.EPSG_3857,\n      featureProjection: Projections.EPSG_3857\n    });\n    const features = geoJsonData.readFeatures(data);\n    vectorSource.addFeatures(features);\n    vectorSource.getExtent();\n    return vectorSource;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Fabi/Documents/app/src/utils/MapUtils.tsx"],"names":["Map","View","TileLayer","XYZSource","baseLayerUrl","mapCenter","mapZoom","rotationStatus","VectorSource","GeoJSON","Projections","MapUtils","createBaseLayer","xyzURL","baseSource","url","baseLayer","source","createMap","map","target","layers","view","center","zoom","enableRotation","createVectorSource","data","vectorSource","format","dataProjection","EPSG_4326","featureProjection","EPSG_3857","geoJsonData","features","readFeatures","addFeatures","getExtent"],"mappings":"AACA,SAASA,GAAT,EAAcC,IAAd,QAA0B,IAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,OAAlC,EAA2CC,cAA3C,QAAiE,aAAjE;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,MAAMC,QAAN,CAAe;AAClB,SAAOC,eAAP,GAAyB;AACrB,UAAMC,MAAc,GAAGT,YAAvB;AACA,UAAMU,UAAqB,GAAG,IAAIX,SAAJ,CAAc;AACxCY,MAAAA,GAAG,EAAEF;AADmC,KAAd,CAA9B;AAGA,UAAMG,SAAoB,GAAG,IAAId,SAAJ,CAAc;AACvCe,MAAAA,MAAM,EAAEH;AAD+B,KAAd,CAA7B;AAIA,WAAOE,SAAP;AACH;;AAED,SAAOE,SAAP,GAAmB;AACf,UAAMF,SAAoB,GAAG,KAAKJ,eAAL,EAA7B;AACA,UAAMO,GAAQ,GAAG,IAAInB,GAAJ,CAAQ;AACrBoB,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,MAAM,EAAE,CAACL,SAAD,CAFa;AAGrBM,MAAAA,IAAI,EAAE,IAAIrB,IAAJ,CAAS;AACXsB,QAAAA,MAAM,EAAElB,SADG;AAEXmB,QAAAA,IAAI,EAAElB,OAFK;AAGXmB,QAAAA,cAAc,EAAElB;AAHL,OAAT;AAHe,KAAR,CAAjB;AASA,WAAOY,GAAP;AACH;;AAED,SAAOO,kBAAP,CAA0BC,IAA1B,EAAyC;AACrC,UAAMC,YAA0B,GAAG,IAAIpB,YAAJ,CAAiB;AAChDqB,MAAAA,MAAM,EAAE,IAAIpB,OAAJ,CAAY;AAChBqB,QAAAA,cAAc,EAAEpB,WAAW,CAACqB,SADZ;AAEhBC,QAAAA,iBAAiB,EAAEtB,WAAW,CAACuB;AAFf,OAAZ;AADwC,KAAjB,CAAnC;AAOA,QAAIC,WAAW,GAAG,IAAIzB,OAAJ,CAAY;AAC1BqB,MAAAA,cAAc,EAAEpB,WAAW,CAACuB,SADF;AAE1BD,MAAAA,iBAAiB,EAAEtB,WAAW,CAACuB;AAFL,KAAZ,CAAlB;AAKA,UAAME,QAAQ,GAAGD,WAAW,CAACE,YAAZ,CAAyBT,IAAzB,CAAjB;AACAC,IAAAA,YAAY,CAACS,WAAb,CAAyBF,QAAzB;AACAP,IAAAA,YAAY,CAACU,SAAb;AACA,WAAOV,YAAP;AACH;;AA5CiB","sourcesContent":["\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZSource from 'ol/source/XYZ';\r\nimport { baseLayerUrl, mapCenter, mapZoom, rotationStatus } from './MapConfig';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport { Projections } from '../types/types';\r\n\r\nexport class MapUtils {\r\n    static createBaseLayer() {\r\n        const xyzURL: string = baseLayerUrl;\r\n        const baseSource: XYZSource = new XYZSource({\r\n            url: xyzURL\r\n        });\r\n        const baseLayer: TileLayer = new TileLayer({\r\n            source: baseSource\r\n        });\r\n\r\n        return baseLayer;\r\n    }\r\n\r\n    static createMap() {\r\n        const baseLayer: TileLayer = this.createBaseLayer();\r\n        const map: Map = new Map({\r\n            target: 'map',\r\n            layers: [baseLayer],\r\n            view: new View({\r\n                center: mapCenter,\r\n                zoom: mapZoom,\r\n                enableRotation: rotationStatus,\r\n            })\r\n        });\r\n        return map;\r\n    }\r\n\r\n    static createVectorSource(data: GeoJSON) {\r\n        const vectorSource: VectorSource = new VectorSource({\r\n            format: new GeoJSON({\r\n                dataProjection: Projections.EPSG_4326,\r\n                featureProjection: Projections.EPSG_3857\r\n            })            \r\n        });\r\n\r\n        let geoJsonData = new GeoJSON({\r\n            dataProjection: Projections.EPSG_3857,\r\n            featureProjection: Projections.EPSG_3857\r\n        });\r\n        \r\n        const features = geoJsonData.readFeatures(data);\r\n        vectorSource.addFeatures(features);\r\n        vectorSource.getExtent();\r\n        return vectorSource;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}